parameters:
  pythonVersions: []
  operatingSystems: []
  architectures: []

jobs:
  - job:
    displayName: ' '
    strategy:
      matrix:
        ${{ each py in parameters.pythonVersions }}:
          ${{ each os in parameters.operatingSystems }}:
            ${{ each architecture in parameters.architectures }}:
              ${{ format('Python {0} on {1} ({2})', py, os, architecture) }}:
                pythonVersion: ${{ py }}
                operatingSystem: ${{ os }}
                architecture: ${{ architecture }}
    pool:
      vmImage: $(operatingSystem)
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(pythonVersion)'
          architecture: '$(architecture)'

      - script: |
          pip install -U pip
          pip install -U wheel setuptools
          pip install -U -r requirements.txt
        displayName: 'Install requirements'
      - script: |
          pytest --cov=anonlinkclient --junitxml=testResults.xml  --cov-report=xml:coverage.xml
        displayName: 'Tests'
        timeoutInMinutes: 10  # it should pass in 2.5 minutes, so 10 should be more than enough even if server is busy
        env:
            TEST_ENTITY_SERVICE: 'https://anonlink-client-ci.easd.data61.xyz/'

      - bash: |
          pip install -U pip codecov

          report_name="$(operatingSystem)_$(architecture)_$(pythonVersion)"

          bash <(curl -s https://codecov.io/bash -F ${report_name})

        displayName: 'Send coverage to codecov'
        condition: succeededOrFailed()
