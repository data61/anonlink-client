parameters:
  pythonVersions: []
  operatingSystems: []
  architectures: []

jobs:
  - job:
    displayName: ' '
    strategy:
      matrix:
        ${{ each py in parameters.pythonVersions }}:
          ${{ each os in parameters.operatingSystems }}:
            ${{ each architecture in parameters.architectures }}:
              ${{ format('Python {0} on {1} ({2})', py, os, architecture) }}:
                pythonVersion: ${{ py }}
                operatingSystem: ${{ os }}
                architecture: ${{ architecture }}
    pool:
      vmImage: $(operatingSystem)
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(pythonVersion)'
          architecture: '$(architecture)'

      - script: |
          pip install -U pip
          pip install -U -r requirements.txt
        displayName: 'Install requirements'

      # Test tutorial Jupyter notebooks in docs
      - script: |
          pip install wheel
          pip install -r requirements.txt
          pip install --upgrade pip setuptools wheel
          pip install -e .
          python -m pip install -U -r docs/doc-requirements.txt
          python -m pip install -r docs/tutorial/tutorial-requirements.txt
          pip freeze
          pytest --nbval docs/tutorial
        displayName: 'Test all notebooks'